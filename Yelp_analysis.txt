Profiling and Analyzing the Yelp Dataset Worksheet

This is a 2-part assignment. In the first part, I was asked to a series of questions that will profile and understand the data. 

In the second part of the assignment, I was asked to come up with my own inferences and analysis of the data for a particular research question that I answered. 




Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
-- Common code for finding total_records of each table

SELECT 
COUNT(*) AS total_records
FROM column_name

i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business =

SELECT COUNT(DISTINCT id) AS total_distinct_records
FROM business

total_distinct_records=  10000

ii. Hours =

SELECT COUNT(DISTINCT business_id) AS total_distinct_records
FROM hours

total_distinct_records= 1562

iii. Category = 

SELECT COUNT(DISTINCT business_id) AS total_distinct_records
FROM category

total_distinct_records = 2643

iv. Attribute =

SELECT COUNT(DISTINCT business_id) AS total_distinct_records
FROM attribute

total_distinct_records = 1115

v. Review =

Fr. Key= business_id

SELECT COUNT(DISTINCT business_id) AS total_distinct_records
FROM review

total_distinct_records = 8090

Fr.key= user_id

SELECT COUNT(DISTINCT business_id) AS total_distinct_records
FROM review

total_distinct_records = 9581

vi. Checkin = 

SELECT COUNT(DISTINCT business_id) AS total_distinct_records
FROM review

total_distinct_records = 8090

vii. Photo =

SELECT COUNT(DISTINCT id) AS total_distinct_records
FROM photo

total_distinct_records = 10000

viii. Tip = 

fr.key = user_id

SELECT COUNT(DISTINCT user_id) AS total_distinct_records
FROM tip

total_distinct_records = 537

fr.key = business_id

SELECT COUNT(DISTINCT business_id) AS total_distinct_records
FROM tip

total_distinct_records = 3979

ix. User = 

SELECT COUNT(DISTINCT id) AS total_distinct_records
FROM user

total_distinct_records = 10000

x. Friend =

SELECT COUNT(DISTINCT user_id) AS total_distinct_records
FROM friend

total_distinct_records = 11
 
xi. Elite_years =

SELECT COUNT(DISTINCT user_id) AS total_distinct_records
FROM elite_years

total_distinct_records = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: "no."
	
	
	SQL code used to arrive at answer:
	
SELECT id 
,name
,review_count	
,yelping_since	
,useful	
,funny	
,cool	
,fans	
,average_stars	
,compliment_hot	
,compliment_more	
,compliment_profile	
,compliment_cute	
,compliment_list	
,compliment_note	
,compliment_plain
,compliment_cool	
,compliment_funny	
,compliment_writer	
,compliment_photos
,COUNT(*) AS count

FROM user

WHERE id IS NULL OR name IS NULL OR review_count	
IS NULL OR yelping_since IS NULL OR	useful OR 	
funny IS NULL OR cool IS NULL OR fans IS NULL	
OR average_stars IS NULL OR compliment_hot	OR compliment_more	
IS NULL OR compliment_profile IS NULL OR compliment_cute IS NULL	
OR compliment_list IS NULL OR compliment_note IS NULL OR	
compliment_plain IS NULL OR compliment_cool IS NULL OR	
compliment_funny IS NULL OR compliment_writer IS NULL	
OR compliment_photos IS NULL





	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg:   3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1	max:	5	avg:   3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg:   0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg:   1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg:   24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
SELECT city
, COUNT(review_count) AS total_reviews
FROM business
GROUP BY city
ORDER BY total_reviews DESC
	
	Copy and Paste the Result Below:
	
+-----------------+---------------+
| city            | total_reviews |
+-----------------+---------------+
| Las Vegas       |          1561 |
| Phoenix         |          1001 |
| Toronto         |           985 |
| Scottsdale      |           497 |
| Charlotte       |           468 |
| Pittsburgh      |           353 |
| Montréal        |           337 |
| Mesa            |           304 |
| Henderson       |           274 |
| Tempe           |           261 |
| Edinburgh       |           239 |
| Chandler        |           232 |
| Cleveland       |           189 |
| Gilbert         |           188 |
| Glendale        |           188 |
| Madison         |           176 |
| Mississauga     |           150 |
| Stuttgart       |           141 |
| Peoria          |           105 |
| Markham         |            80 |
| Champaign       |            71 |
| North Las Vegas |            70 |
| North York      |            64 |
| Surprise        |            60 |
| Richmond Hill   |            54 |
+-----------------+---------------+
(Output limit exceeded, 25 of 362 total rows shown)

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars
, COUNT(stars) AS Count
FROM business
WHERE city == 'Avon'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------+
| stars | Count |
+-------+-------+
|   1.5 |     1 |
|   2.5 |     2 |
|   3.5 |     3 |
|   4.0 |     2 |
|   4.5 |     1 |
|   5.0 |     1 |
+-------+-------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars
, COUNT(stars) AS Count
FROM business
WHERE city == 'Beachwood'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
		
+-------+-------+
| stars | Count |
+-------+-------+
|   2.0 |     1 |
|   2.5 |     1 |
|   3.0 |     2 |
|   3.5 |     2 |
|   4.0 |     1 |
|   4.5 |     2 |
|   5.0 |     5 |
+-------+-------+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
SELECT name, review_count
FROM user
ORDER BY review_count DESC
LIMIT 3
	
	Copy and Paste the Result Below:
	
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+	


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
+-----------+--------------+------+

Clearly there is no direct correlation with the more the reviews more the fan count.

	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	
+--------------------+--------------------+
| total_love_reviews | total_hate_reviews |
+--------------------+--------------------+
|               1958 |               1958 |
+--------------------+--------------------+

there is exactly same amount of reviews with both words.

	
	SQL code used to arrive at answer:

SELECT COUNT(*) AS total_love_reviews, COUNT(*) AS total_hate_reviews
FROM review
WHERE text LIKE '%love%'
OR text LIKE '%hate%'	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT name
, fans
FROM user
ORDER BY fans desc
LIMIT 10
	
	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
   
    I have chosen city as 'Las Vegas' and category as 'Shopping' because other categories like Restaurants , Health & Medical don't have reviews of 2-3 stars.
 
ii. Do the two groups you chose to analyze have a different number of reviews?
         
    Comparing the reviews, Walgreens has just 6 reviews of 2-3 stars. And the one with 32 reviews i.e. Red Rock Canyon Visitor Centre is quite liked by the residents with 4-5stars rating. Also the Desert Medical Equipment with 4-5 stars have 4 reviews.   

iii. Are you able to infer anything from the location data provided between these two groups? Explain.
     
     The location and neighborhood of a business do not provide enough information to draw any firm conclusions. This is because different businesses have different postal codes and neighborhoods. Without more data, it is impossible to say for sure whether there is a correlation between star rating and location detail.	 

SQL code used for analysis:

    SELECT
       CASE
       WHEN stars>=4 THEN '4-5 Stars'
       WHEN (stars>=2 AND stars<=3) THEN '2-3 Stars'
       END as rating,

       postal_code,
       review_count,
       hours.hours,
       name,
       neighborhood


     FROM business INNER JOIN category
     ON business.id=category.business_id

     INNER JOIN hours
     ON business.id=hours.business_id

     WHERE city='Las Vegas'
      AND category = 'Shopping'
      AND (stars>=4 OR (stars <3 and stars>2))

     ORDER BY stars DESC, hours DESC

		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         the no of reviews for open businesses are than closed ones.
		    
			avg_review_count = 23.2 for closed ones 
		    avg_review_count = 31.76 for open ones         

ii. Difference 2:
         the average star rating for open businesses (3.68) is also more than the closed (3.52) ones.
         
         
SQL code used for analysis:

	SELECT is_open
    , COUNT(DISTINCT(id)) AS number_of_businesses
    , ROUND(AVG(review_count),2) AS avg_review_count
    , ROUND(AVG(stars),2) AS avg_stars_rating
    
	 FROM business
     GROUP BY is_open
	
 	+---------+----------------------+------------------+------------------+
    | is_open | number_of_businesses | avg_review_count | avg_stars_rating |
    +---------+----------------------+------------------+------------------+
    |       0 |                 1520 |             23.2 |             3.52 |
    |       1 |                 8480 |            31.76 |             3.68 |
    +---------+----------------------+------------------+------------------+

3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
     
	 The analysis I have chose to do is to find out what are the most successful businesses based on the business category and the ratings given to them.    
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
     
	 I have used data such as id, stars, and review_count from the business table and category from category table. 
	 Afterwards counted the numbers of companies within each category, the average stars given by the customers to see how they perform,
	 and the total reviews given to see if the data is relevant.

     Lastly, I am only going to look at categories with at least 5 companies and an average of 3+ stars to reduce any irrelevant data and enough sample size of data.
                  
iii. Output of your finished dataset:
         
+------------------------+---------------+-----------+---------------+
| category               | num_companies | avg_stars | total_reviews |
+------------------------+---------------+-----------+---------------+
| Automotive             |             9 |       4.5 |           198 |
| Local Services         |            12 |      4.21 |           100 |
| Active Life            |            10 |      4.15 |           131 |
| Health & Medical       |            17 |      4.09 |           203 |
| Arts & Entertainment   |             7 |       4.0 |           388 |
| Home Services          |            16 |       4.0 |            94 |
| Shopping               |            30 |      3.98 |           977 |
| Sandwiches             |             8 |      3.94 |           974 |
| Beauty & Spas          |            13 |      3.88 |           119 |
| American (Traditional) |            11 |      3.82 |          1128 |
| Food                   |            23 |      3.78 |          1781 |
| Bars                   |            17 |       3.5 |          1322 |
| Mexican                |             7 |       3.5 |           327 |
| Nightlife              |            20 |      3.48 |          1351 |
| Restaurants            |            71 |      3.46 |          4504 |
| Hotels & Travel        |             9 |      3.22 |           381 |
| Fast Food              |             7 |      3.21 |           185 |
| Burgers                |             8 |      3.13 |           297 |
+------------------------+---------------+-----------+---------------+    

iv. Provide the SQL code you used to create your final dataset:


     SELECT  category, 
        count(distinct id) AS num_companies, 
        round(avg(stars),2) AS avg_stars,
        sum(review_count) total_reviews
    
	FROM business JOIN category 
	ON business.id = category.business_id
    
	GROUP BY category
    HAVING avg_stars >= 3 AND num_companies >= 7
    
	ORDER BY avg_stars DESC